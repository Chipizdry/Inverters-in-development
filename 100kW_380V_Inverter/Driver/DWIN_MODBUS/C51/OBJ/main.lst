C51 COMPILER V9.53.0.0   MAIN                                                              12/24/2024 11:05:19 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\OBJ\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\KEIL\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USE
                    -R;..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\UART2) DEBUG PRINT(..\OBJ\main.lst) TABS(2) OBJECT(..\OBJ\main.obj)

line level    source

   1          #include "sys.h"
   2          #include "uart2.h"
   3          
   4          extern  u8 modbus_addresses[5];     // –ê–¥—Ä–µ—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
   5          extern  u16 start_reg;              // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä
   6          extern  u16 num_reg;                // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤
   7          
   8          
   9          
  10          
  11          #define FIRST_TXT    "DGUS Tool\0\0"
  12          #define TEST_TXT     "DGUS TEST TEXT\0\0"
  13          #define INT_TXT    "INERRUPT \0\0"
  14          #define WHILE_TXT    "WHILE___ \0\0"
  15          
  16          
  17          
  18          // –ü—Ä–æ—Ç–æ—Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏
  19          void modbus_requests(ModbusRequest *requests);
  20          
  21          
  22          void modbus_requests(ModbusRequest *requests) {
  23   1          u8 packet[8];
  24   1          u16 crc;
  25   1      
  26   1          // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å Modbus
  27   1          packet[0] = requests->address;                      // –ê–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  28   1          packet[1] = requests->command;                                  // –ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ (—á—Ç–µ–Ω–∏–µ
             - —Ä–µ–≥–∏—Å—Ç—Ä–æ–≤)
  29   1          packet[2] = (requests->start_register >> 8) & 0xFF; // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ä
             -–µ–≥–∏—Å—Ç—Ä–∞
  30   1          packet[3] = requests->start_register & 0xFF;        // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ä
             -–µ–≥–∏—Å—Ç—Ä–∞
  31   1          packet[4] = (requests->num_registers >> 8) & 0xFF;  // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä
             -–µ–≥–∏—Å—Ç—Ä–æ–≤
  32   1          packet[5] = requests->num_registers & 0xFF;         // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä
             -–µ–≥–∏—Å—Ç—Ä–æ–≤
  33   1      
  34   1          // –í—ã—á–∏—Å–ª—è–µ–º CRC
  35   1          crc = calculate_crc(packet, 6);
  36   1          packet[6] = crc & 0xFF;                            // –ú–ª–∞–¥—à–∏–π –±–∞–π—Ç CRC
  37   1          packet[7] = (crc >> 8) & 0xFF;                     // –°—Ç–∞—Ä—à–∏–π –±–∞–π—Ç CRC
  38   1          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ UART
  39   1          u2_send_bytes(packet, 8);
  40   1      }
  41          
  42          
  43          
  44          
  45          void main(void)
  46          {   
  47   1      
  48   1      // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ `xdata`
  49   1      idata  ModbusRequest request[6] = {
C51 COMPILER V9.53.0.0   MAIN                                                              12/24/2024 11:05:19 PAGE 2   

  50   1          {0x1, 0x3, 0x0001, 0x4},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 1
  51   1          {0x2, 0x4, 0x0005, 0x2},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 2
  52   1          {0x3, 0x10, 0x0010, 0x6},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 3
  53   1          {0x4, 0x2, 0x0020, 0x8},   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 4
  54   1          {0x5, 0x16, 0x0030, 0x10},  // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 5
  55   1          {0x6, 0x5, 0x0040, 0x12}   // –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ 6
  56   1      };
  57   1      
  58   1       idata  ModbusRequest temp_request;
  59   1        u8 send_buff[8]={0, };
  60   1        u32 polling_timer=0;                    // –¢–∞–π–º–µ—Ä –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
  61   1        u8 polling_state;                     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–ø—Ä–æ—Å–∞: 0 - –æ—Ç–ø—Ä–∞–≤–∫–∞, 1 - –æ–∂–
             -∏–¥–∞–Ω–∏–µ
  62   1        u16 len;
  63   1        u16 i;
  64   1        u8 buff[512]={0, };
  65   1        u16 recv_len;
  66   1        idata u8 command_value; // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  67   1        
  68   1        sys_init();//System initialization
  69   1        
  70   1          
  71   1           sys_write_vp(0x2004,FIRST_TXT,sizeof(FIRST_TXT)/2+1);//Ÿ∏÷ö“ªŸ∂"œÑ—æ–î æ"‡†ò›æ ®◊ÉœÑ—æ≈ö…ù
  72   1           sys_delay_ms(1000);
  73   1           sys_write_vp(0x2036,TEST_TXT,sizeof(TEST_TXT)/2+1);
  74   1           uart2_init(9600);//Initialize serial port 2
  75   1        
  76   1           modbus_requests(&request[0]);
  77   1           current_device = 0;
  78   1           polling_state=0;
  79   1        while(1){   
  80   2          
  81   2          
  82   2          if(uart2_rx_sta & UART2_PACKET_OK)
  83   2          {
  84   3            
  85   3          
  86   3            len = uart2_rx_sta&UART2_PACKET_LEN;
  87   3          
  88   3            
  89   3            recv_len = 0;
  90   3            for(i=0;i<len;i++)
  91   3            {
  92   4              recv_len += sprintf(buff+recv_len,"%02X ",(u16)uart2_buf[i]);
  93   4            }
  94   3          
  95   3            sys_write_vp(0x2004,buff,recv_len/2+1);
  96   3            
  97   3            uart2_rx_sta = 0;
  98   3            
  99   3          }
 100   2         
 101   2          
 102   2        
 103   2          
 104   2      if (polling_state==0) {
 105   3             if (current_device >= 6) {
 106   4                 current_device = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –≥—
             -Ä–∞–Ω–∏—Ü—ã
 107   4                }
 108   3        
 109   3                
C51 COMPILER V9.53.0.0   MAIN                                                              12/24/2024 11:05:19 PAGE 3   

 110   3              
 111   3              temp_request = request[current_device];
 112   3              modbus_requests((ModbusRequest*)&temp_request);
 113   3             // modbus_requests(&request[current_device]);
 114   3                sys_write_vp(0x2000,(u8*)&current_device,1);
 115   3              
 116   3       
 117   3          command_value = temp_request.command; // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
 118   3          sys_write_vp(0x2001, &temp_request.command, 1); // –ó–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
*** WARNING C182 IN LINE 118 OF main.c: pointer to different objects
 119   3          sys_write_vp(0x2002, &temp_request.start_register, 1); // –ó–∞–ø–∏—Å—å –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
*** WARNING C182 IN LINE 119 OF main.c: pointer to different objects
 120   3          data_len=(temp_request.num_registers * 2)+8;  
 121   3          sys_write_vp(0x2003,(u16*)&data_len, 2);  
*** WARNING C182 IN LINE 121 OF main.c: pointer to different objects
 122   3      
 123   3            polling_state=1;
 124   3            polling_timer=500000; 
 125   3             }
 126   2            polling_timer--;
 127   2          
 128   2          
 129   2          // –°–æ—Å—Ç–æ—è–Ω–∏–µ 1: –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
 130   2          if (polling_state == 1) {
 131   3              // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç
 132   3            
 133   3              if (rcv_complete==1) {
 134   4                  sys_write_vp(0x2036, "Received        \n", 9);
 135   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 136   4                  current_device=current_device+1;
 137   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 138   4                  rcv_complete=0;
 139   4              }
 140   3              // –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ
 141   3               if (polling_timer ==0) {
 142   4                  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–∞–π–º–∞—É—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 143   4                  sys_write_vp(0x2036, "Timeout         \n", 9);
 144   4      
 145   4                  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
 146   4                   current_device=current_device+1;
 147   4                  polling_state = 0;  // –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
 148   4                  rcv_complete=0;
 149   4              }     
 150   3          } 
 151   2        }
 152   1          
 153   1      }
 154          
 155          
 156          
 157          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    849    ----
   CONSTANT SIZE    =    639    ----
   XDATA SIZE       =   ----     544
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      57
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   MAIN                                                              12/24/2024 11:05:19 PAGE 4   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
